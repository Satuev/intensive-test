name: CI/CD Pipeline

# Этот рабочий процесс запускается каждый раз, когда кто-либо совершает push или pr в ветку master
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]


jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      # Используется действие для исключения кода из репозитория
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Install deps
        uses: borales/actions-yarn@v4
        with:
          cmd: install

      - name: Check formatting
        uses: borales/actions-yarn@v4
        with:
          cmd: prettier:check
          
      # - name: Lint
      #   uses: borales/actions-yarn@v4
      #   with:
      #     cmd: lint
          
      - name: Test
        uses: borales/actions-yarn@v4
        with:
          cmd: test
          
      - name: Build
        uses: borales/actions-yarn@v4
        with:
          cmd: build

  cd:
    needs: ci
    runs-on: ubuntu-latest

    steps:
      # Используется действие для исключения кода из репозитория
      - name: Checkout code
        uses: actions/checkout@v3

      # Выполняем SSH команды на сервере
      - name: Execute SSH commands
        uses: appleboy/ssh-action@master
        with:
          # Секреты, как SERVER_IP, SERVER_USER и SSH_PRIVATE_KEY,
          # представляют собой зашифрованные переменные окружения, которые вы можнастроить в вашем репозитории.
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          # Команды, которые нужно выполнить на сервере. Обычно это клонирование коустановка зависимостей, сборка проекта и его запуск.
          script: |
            # Установить переменные среды, включая PATH
            export NVM_DIR="/path/to/nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
            # Переходим в директорию проекта на сервере
            cd intensive-test/
            # Получаем последние изменения из репозитория
            git fetch
            # Принудительно обновляем код проекта до последней версии
            git reset --hard origin/master
            # Устанавливаем зависимости
            yarn install
            # Собираем проект
            yarn build
